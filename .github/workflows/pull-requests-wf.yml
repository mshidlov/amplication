name: Validate Push

on:
  workflow_dispatch:
  push:
      
jobs:
  changed-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.lerna-changed.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: npm i -g npm@7.3.0
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: pr-ci-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
              pr-ci-${{ runner.os }}-
      - name: npm ci
        run: npm ci --cache ~/.npm --prefer-offline --only=production --silent
      - name: Lerna SINCE environment 
        run: echo "SINCE=origin/$GITHUB_BASE_REF" >> $GITHUB_ENV     
      - name: Lerna Changed
        id: lerna-changed
        run: |
          echo ::set-output name=packages::$(lerna changed --json)

  my_echo:
    runs-on: ubuntu-latest
    needs:
      - changed-packages
    steps:
      - name: Echo previous outputs
        run: echo "${{ toJSON(needs.changed-packages.outputs) }}"
      - run: echo "${{ toJSON(needs.changed-packages.outputs.packages) }}"
      - run: echo "${{ toJSON(needs.changed-packages.outputs).packages }}"

  check-format:
    runs-on: ubuntu-latest
    needs:
      - changed-packages
    timeout-minutes: 45
    strategy:
      matrix:
        package: ${{ fromJson(needs.changed-packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@v2
      - name: escape ${{matrix.package.name}} package-lock.json relative path 
        id: package_lock
        run: |
          echo ::set-output name=rel_path::$(echo ${{ toJSON(format('{0}/package-lock.json', toJSON(matrix.package.location))) }} | tr -d '"' | sed 's/\/home\/runner\/work\/amplication\/amplication\///')
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: pr-lerna-${{ runner.os }}-${{matrix.package.name}}-${{ hashFiles(steps.package_lock.outputs.rel_path) }}
          restore-keys: |
              pr-lerna-${{ runner.os }}-${{matrix.package.name}}
              pr-lerna-${{ runner.os }}-
      - name: npm ci
        run: npm ci --cache ~/.npm --prefer-offline --only=production --silent      
      - name: Lerna Bootstrap
        run: lerna bootstrap --scope=${{matrix.package.name}} 
      - name: Lerna Check Formatting
        id: lerna
        run: |
          echo ::set-output name=result$(lerna run --scope=${{matrix.package.name}} check-format)
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS : ${{ toJson({"embeds":[{"title":"Hello!","description":"Hi! :grinning:"}]}) }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'FAILED Check Formatting - ${{ steps.lerna.outputs.result }} | package: ${{matrix.package.name}} ,  Commit: {{ EVENT_PAYLOAD.head_commit.id }} ,  branch: {{ GITHUB_REF }} ,  commiter: {{EVENT_PAYLOAD.sender.login}}'

      # {{EVENT_PAYLOAD.pusher.name}}   {{ EVENT_PAYLOAD.head_commit.commiter.name }}
#, commit message: {{ EVENT_PAYLOAD.head_commit.message }}      
      
