name: Validate Push

on:
  workflow_dispatch:
  push:
      
jobs:
  changed-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.lerna-changed.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
           git diff --name-only origin/master -- 'packages/**/*.yaml' 'packages/**/*.js' \
           'packages/**/*.ts' 'packages/**/*.json' 'packages/**/*.gql' 'packages/**/*.md' \
           | grep -Po 'packages/\K[^/]*' | sort -t: -u -k1,1 | jq -Rs 'split("\n") | select(length > 0)'
           
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: npm i -g npm@7.3.0
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: pr-ci-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
              pr-ci-${{ runner.os }}-
      - name: npm ci
        run: npm ci --cache ~/.npm --prefer-offline --only=production --silent
      #- name: Lerna SINCE environment 
      #  run: echo "SINCE=origin/master" >> $GITHUB_ENV
      #- name: Lerna SINCE environment 
      #  run: |
      #    echo "SINCE=origin/$GITHUB_BASE_REF"
      #    echo "SINCE=origin/master"
      #    echo $GITHUB_ENV             
      - name: Lerna Changed
        id: lerna-changed
        run: |
          echo ::set-output name=packages::$(lerna changed --json)
      - name: Lerna Changed
        id: lerna
        run: |
          lerna diff --since master
          #lerna updated --since master...HEAD -l
      - name: Lerna Changed
        id: lerna1
        run: |
          lerna changed --json --since master...HEAD -l

  validate-package-change:
    runs-on: ubuntu-latest
    needs:
      - changed-packages
    timeout-minutes: 45
    steps:
      - run: echo "${{ toJson(needs.changed-packages.outputs.packages) }}"


  validate-package:
    runs-on: ubuntu-latest
    needs:
      - changed-packages
    timeout-minutes: 45
    strategy:
      matrix:
        package: ${{ fromJson(needs.changed-packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@v2

      - name: escape ${{matrix.package.name}} package-lock.json relative path 
        id: package_lock
        run: |
          echo ::set-output name=rel_path::$(echo ${{ toJSON(format('{0}/package-lock.json', toJSON(matrix.package.location))) }} | tr -d '"' | sed 's/\/home\/runner\/work\/amplication\/amplication\///')
      
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: pr-lerna-${{ runner.os }}-${{matrix.package.name}}-${{ hashFiles(steps.package_lock.outputs.rel_path) }}
          restore-keys: |
              pr-lerna-${{ runner.os }}-${{matrix.package.name}}
              pr-lerna-${{ runner.os }}-
      
      - name: Install Node.js dependencies
        run: npm ci --cache ~/.npm --prefer-offline --only=production --silent      
      
      - name: Install package dependencies
        run: lerna bootstrap --scope=${{matrix.package.name}} 
        
      - name: Build code
        id: build
        run: |
          echo ::set-output name=result$(lerna run --scope=${{matrix.package.name}} build)
          
      - name: Format code
        id: format
        run: |
          echo ::set-output name=result$(lerna run --scope=${{matrix.package.name}} check-format)

      - name: Lint code
        id: lint
        run: |
          echo ::set-output name=result$(lerna run --scope=${{matrix.package.name}} lint)
      
      - name: Run tests
        id: test
        run: |
          echo ::set-output name=result$(lerna run --scope=${{matrix.package.name}} test)
      
      - name: Discord notification
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "Job ${{ github.job }} in workflow ${{ github.workflow }} of ${{github.repository}} failed! https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" 
          #'FAILED Check Formatting - ${{ steps.lerna.outputs.result }} | package: ${{matrix.package.name}} ,  Commit: {{ EVENT_PAYLOAD.head_commit.id }} ,  branch: {{ GITHUB_REF }} ,  commiter: {{EVENT_PAYLOAD.sender.login}}'
